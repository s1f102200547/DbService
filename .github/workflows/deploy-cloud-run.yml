name: Deploy to Cloud Run (Dev)

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ "*" ]

concurrency:
  group: cloud-run-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Run tests
        run: yarn test
        env:
          CI: true

  deploy-dev:
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/development'
    runs-on: ubuntu-latest

    env:
      PROJECT_ID: ${{ secrets.GCP_PROJECT_ID_DEV }}
      CREDENTIALS: ${{ secrets.GCP_CREDENTIALS_DEV }}
      REGION: asia-northeast1
      SERVICE_NAME: db-service-dev
      IMAGE_SHA: asia-northeast1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID_DEV }}/db-service-dev/db-service:${{ github.sha }}
      RUN_SERVICE_ACCOUNT: ${{ secrets.GCP_RUN_SERVICE_ACCOUNT_DEV }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ env.CREDENTIALS }}

      - name: Setup Google Cloud CLI
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker asia-northeast1-docker.pkg.dev --quiet

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build TypeScript
        run: yarn build

      - name: Build Docker image
        run: docker build -t "${IMAGE_SHA}" .

      - name: Push Docker image
        run: docker push "${IMAGE_SHA}"

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy "${SERVICE_NAME}" \
            --image "${IMAGE_SHA}" \
            --platform managed \
            --region "${REGION}" \
            --service-account="${RUN_SERVICE_ACCOUNT}" \
            --allow-unauthenticated \
            --memory 512Mi \
            --cpu 1 \
            --min-instances 0 \
            --max-instances 5

  deploy-prod:
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    env:
      PROJECT_ID: ${{ secrets.GCP_PROJECT_ID_PROD }}
      CREDENTIALS: ${{ secrets.GCP_CREDENTIALS_PROD }}
      REGION: asia-northeast1
      SERVICE_NAME: db-service-prod
      IMAGE_SHA: asia-northeast1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID_PROD }}/db-service-prod/db-service:${{ github.sha }}
      RUN_SERVICE_ACCOUNT: ${{ secrets.GCP_RUN_SERVICE_ACCOUNT_PROD }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ env.CREDENTIALS }}

      - name: Setup Google Cloud CLI
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker asia-northeast1-docker.pkg.dev --quiet

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build TypeScript
        run: yarn build

      - name: Build Docker image
        run: docker build -t "${IMAGE_SHA}" .

      - name: Push Docker image
        run: docker push "${IMAGE_SHA}"

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy "${SERVICE_NAME}" \
            --image "${IMAGE_SHA}" \
            --platform managed \
            --region "${REGION}" \
            --service-account="${RUN_SERVICE_ACCOUNT}" \
            --memory 512Mi \
            --cpu 1 \
            --min-instances 0 \
            --max-instances 5
